<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Custom="http://metro.mahapps.com/winfx/xaml/controls">
    <!--СТИЛЬ ФОРМЫ-->
    <Color x:Key="HighlightColor">#3D5476</Color>
    <!--80%-->
    <Color x:Key="AccentColor">#3D5476</Color>
    <!--60%-->
    <Color x:Key="AccentColor2">#9900695C</Color>
    <!--40%-->
    <Color x:Key="AccentColor3">#6600695C</Color>
    <!--20%-->
    <Color x:Key="AccentColor4">#3300695C</Color>
    <!-- re-set brushes too -->
    <SolidColorBrush x:Key="HighlightBrush" Color="{StaticResource HighlightColor}" />
    <SolidColorBrush x:Key="AccentColorBrush" Color="{StaticResource AccentColor}"/>
    <SolidColorBrush x:Key="AccentColorBrush2" Color="{StaticResource AccentColor2}"/>
    <SolidColorBrush x:Key="AccentColorBrush3" Color="{StaticResource AccentColor3}"/>
    <SolidColorBrush x:Key="AccentColorBrush4" Color="{StaticResource AccentColor4}"/>
    <SolidColorBrush x:Key="WindowTitleColorBrush" Color="{StaticResource AccentColor}" />
    <SolidColorBrush x:Key="AccentSelectedColorBrush" Color="White" />
    <LinearGradientBrush x:Key="ProgressBrush" EndPoint="0.001,0.5" StartPoint="1.002,0.5">
        <GradientStop Color="{StaticResource HighlightColor}" Offset="0" />
        <GradientStop Color="{StaticResource AccentColor3}" Offset="1" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="CheckmarkFill" Color="{StaticResource AccentColor}" />
    <SolidColorBrush x:Key="RightArrowFill" Color="{StaticResource AccentColor}" />
    <Color x:Key="IdealForegroundColor">White</Color>
    <SolidColorBrush x:Key="IdealForegroundColorBrush" Color="{StaticResource IdealForegroundColor}"/>
    <Style x:Key="ButtonStyleGreen" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource FlatButtonBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource FlatButtonForegroundBrush}"/>
        <Setter Property="FontSize" Value="{DynamicResource FlatButtonFontSize}"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="0">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="#33691E"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush2}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="DarkGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonRed" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource FlatButtonBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource FlatButtonForegroundBrush}"/>
        <Setter Property="FontSize" Value="{DynamicResource FlatButtonFontSize}"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="0">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="#D32F2F"/>
                            <Setter Property="Foreground" Value="{DynamicResource FlatButtonPressedForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush2}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="DarkGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Padding" Value="6,2"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="MinWidth" Value="5"/>
        <Setter Property="MinHeight" Value="5"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Custom:ControlsHelper.HeaderFontSize" Value="{DynamicResource TabItemFontSize}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <DockPanel x:Name="DockPanel" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <DockPanel.Resources>
                                <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
                            </DockPanel.Resources>
                            <ContentPresenter x:Name="ContentSite" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" DockPanel.Dock="Top" TextElement.Foreground="{TemplateBinding Foreground}" TextElement.FontWeight="{TemplateBinding Custom:ControlsHelper.HeaderFontWeight}" TextElement.FontStretch="{TemplateBinding Custom:ControlsHelper.HeaderFontStretch}" TextElement.FontSize="{TemplateBinding Custom:ControlsHelper.HeaderFontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Rectangle x:Name="Underline" DockPanel.Dock="Bottom" HorizontalAlignment="Stretch" Height="2" Margin="0,1,0,0">
                                <Rectangle.Visibility>
                                    <Binding Path="(Custom:TabControlHelper.IsUnderlined)" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}">
                                        <Binding.Converter>
                                            <BooleanToVisibilityConverter/>
                                        </Binding.Converter>
                                    </Binding>
                                </Rectangle.Visibility>
                            </Rectangle>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Left"/>
                            <Setter Property="DockPanel.Dock" TargetName="Underline" Value="Right"/>
                            <Setter Property="Width" TargetName="Underline" Value="2"/>
                            <Setter Property="Height" TargetName="Underline" Value="Auto"/>
                            <Setter Property="Margin" TargetName="Underline" Value="1,0,0,0"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Top">
                            <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Top"/>
                            <Setter Property="DockPanel.Dock" TargetName="Underline" Value="Bottom"/>
                            <Setter Property="DockPanel.Dock" TargetName="Underline" Value="Right"/>
                            <Setter Property="Height" TargetName="Underline" Value="2"/>
                            <Setter Property="Width" TargetName="Underline" Value="Auto"/>
                            <Setter Property="Margin" TargetName="Underline" Value="0,1,0,0"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Right"/>
                            <Setter Property="DockPanel.Dock" TargetName="Underline" Value="Left"/>
                            <Setter Property="Width" TargetName="Underline" Value="2"/>
                            <Setter Property="Height" TargetName="Underline" Value="Auto"/>
                            <Setter Property="Margin" TargetName="Underline" Value="0,0,1,0"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Bottom"/>
                            <Setter Property="DockPanel.Dock" TargetName="Underline" Value="Top"/>
                            <Setter Property="Height" TargetName="Underline" Value="2"/>
                            <Setter Property="Width" TargetName="Underline" Value="Auto"/>
                            <Setter Property="Margin" TargetName="Underline" Value="0,0,0,1"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" TargetName="DockPanel">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF344865" Offset="0.915"/>
                                        <GradientStop Color="#FF99CD5D" Offset="0.92"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="{DynamicResource AccentColorBrush}"/>
                            <Setter Property="Fill" TargetName="Underline" Value="{DynamicResource AccentColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="{DynamicResource GrayNormalBrush}"/>
                            <Setter Property="Fill" TargetName="Underline" Value="{DynamicResource GrayNormalBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" SourceName="ContentSite" Value="True">
                            <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="{DynamicResource GrayHoverBrush}"/>
                            <Setter Property="Fill" TargetName="Underline" Value="{DynamicResource GrayHoverBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" SourceName="ContentSite" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="{DynamicResource HighlightBrush}"/>
                            <Setter Property="Fill" TargetName="Underline" Value="{DynamicResource HighlightBrush}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>